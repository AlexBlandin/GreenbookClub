Problem 1:
	Write code to partition a linkedlist arround a value X s.t. all nodes less than X come before all nodes greater than or equal to X.
	The two partitions should preserve their order.
	
	Example:
			Input:   3->5->8->5->10->2->1
			Parititon on: 5
			Output:  3->2->1->5->8->5->10

Problem 2:
	Given a circular linkedlist, implement an algorithm that returns the node at the begining of the loop.
	A circular linkedlist is a corrupt linked list in which a node's next pointer points to an earlier node in the linkedlist as to make a loop.
	
	Example:
		Input:   a->b->c->d->e-+
		               ^       |
				       |       |
					   +-------+
		Loop at node: c
	
	This problem has many different solutions. Try to come up with a few :-)
	
Bonus task:
	Sign up for Alex's user study :-)
	
	
Bonus task 2:
	Work on your individual probjects.