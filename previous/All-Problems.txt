# Odds and Evens (Last seen 2019-10-17)

Given an array A of non-negative integers, return an array consisting of all the
even elements of A, followed by all the odd elements of A.

You may return any answer array that satisfies this condition.
 
Example:
  Input:  [3,1,2,4]
  Output: [4,2,1,3]

Extension 1:
  Your output array must now be composed of the even array in ascending order, 
  and the odd array in decending order
 
Example:
  Input:  [3,1,2,4,8,3,4,1]
  Output: [2,4,4,8,3,3,1,1]

# Submatrix (Last seen 2019-10-17)

Given a 2D (binary) matrix filled with 0's and 1's, find the largest rectangle
containing only 1's and return its area.
 
Example:
  Input: [[1,0,1,0,0],
          [1,0,1,1,1],
          [1,1,1,1,1],
          [1,0,0,1,0]]
  Output: 6
  Explanation: A 3*2 rectangle is formed starting at row 1, column 2 and ending
  in row 2 column 4.

# Zero-Sum Game (Last seen 2019-10-24)

Given an array nums of n integers, find all pairs that sum to zero.

Example:
  Input:  [-1, 0, 1, 2, -2, -4]
  Output: [[-1, 1], [2, -2]]

Part B:
  Extend this such that you find triples that sum to zero :-)
 
Example:
  Input:  [-1, 0, 1, 2, -2, 2, -4]
  Output: [[-1, 0, 1],[-2, 0, 2], [-4, 2, 2]] 

# Lispy Business (Last seen 2019-10-24)

Given an input containing parenthesies, write a function to decide if the
parentesies are matched. That is, for every opening parenethesis there must be a
respective closing parentesis and vise versa.
 
Example:
  Input:  "((Hello) world))"
  Output: false
  
  Input:  "((((((HELLO))))))World"
  Output: true
  
  Input:  "()()()()()()()123()()()()))(("
  Output: true

# The Legendary Door Problem (Last Seen 2019-10-31)

There is 100 doors in a dungeon. A prisoner, to survive, must execute the
following algorithm:
  1. They open all doors. 
  2. They close every second door. 
  3. They toggle every third door, 

The process continues, for 100 passes, such that for each pass n, the prisoner
toggles every nth door; When the algorithm completes, the evil genius releases
her monsters. The monsters will come out of every open door. 

Question A:
  How many monsters attack her poor prisoner?

Question B:
  Our evil genius likes to make abstract math a reality. She instead creates d
  many doors (where d is any natural number she pleases). Given d many doors,
  and d many passes of the algorithm, express the number of monsters that attack
  their poor prisoner as a function f(d)

# Sorted Stacking (Last Seen 2019-10-31)

Mix up in groups of first, second, and third years (as possible) and:
  Write a program to sort a stack with the smallest items on top.

Recall that the allowed operations on a stack are: Push, Pop, Peek and isEmpty. 

Question A:
You are allowed to use exactly one aditional stack. How fast can you go?

Question B:
You are allowed to use as many additional stacks as you like. How fast can you
go?

Binary Neighbours (Last seen 2019-11-07)

Given a positive integer, print the next smallest and next largest numbers that
have the same number of 1 bits in their binary representation. Assume it is
even.

Part B:
If you want to have a really really tough problem, try it for any positive
integer.

