Problem 1:

Write an efficient algorithm that searches for a value in an m x n matrix. This
matrix has the following properties:
  1. Integers in each row are sorted from left to right.
  2. The first integer of each row is greater than the last integer of the previous row.
 
Example:
  Matrix = [
    [1,   3,  5,  7],
    [10, 11, 16, 20],
    [23, 30, 34, 50]
  ]
  Target = 3
  Output: true
  
 How fast can you go, and why?

 
Problem 2:

Write a method to count the number of twos (2) that appear between the number 0
and n (For a given n).

Example:
  Input: 25
  Output: 9
  Why?: 2, 12, 20, 21, 22, 23, 24, 25
 
Part A:
  Assume n < 10000. How fast can you go?
  
Part B:
  No restrictions on the value of n. How fast can you go?
